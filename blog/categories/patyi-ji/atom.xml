<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Pat乙级 | DeepIceCream]]></title>
  <link href="http://czczup.github.io/blog/categories/patyi-ji/atom.xml" rel="self"/>
  <link href="http://czczup.github.io/"/>
  <updated>2018-02-21T23:26:21+08:00</updated>
  <id>http://czczup.github.io/</id>
  <author>
    <name><![CDATA[nonoka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[1035. 插入与归并 (25)]]></title>
    <link href="http://czczup.github.io/blog/20180221/pat-basic-level-1035/"/>
    <updated>2018-02-21T16:39:42+08:00</updated>
    <id>http://czczup.github.io/blog/20180221/pat-basic-level-1035</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;根据维基百科的定义：</p>

<p>&#160; &#160; &#160; &#160;<strong>插入排序</strong>是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;<strong>归并排序</strong>进行如下迭代操作：首先将原始序列看成N个只包含1个元素的有序子序列，然后每次迭代归并两个相邻的有序子序列，直到最后只剩下1个有序的序列。</p>

<p>&#160; &#160; &#160; &#160;现给定原始序列和由某排序算法产生的中间序列，请你判断该算法究竟是哪种排序算法？</p>

<hr />

<h3>思路：</h3>

<ol>
<li><p>读入<code>lst1</code>和<code>lst2</code>后，先先判断是插入排序还是归并排序。由于插入排序的判断较为简单，从插入排序先入手。</p></li>
<li><p>在<code>lst2</code>中找到第一个<code>左&gt;右</code>的位置，判断<code>lst1</code>与<code>lst2</code>在该位置右侧的切片是否相等，若相等则是插入排序，反之是归并排序。</p></li>
<li><p>归并排序每次归并的数量<code>cnt</code>为2的倍数。我们将<code>lst2</code>视为未排序序列，对其从<code>cnt=2</code>开始进行归并排序：首先，对<code>lst2</code>按<code>cnt</code>进行切片；然后，再对每一个子列进行排序；最后，把所有数字汇总到<code>result</code>中。不断循环直到归并产生的结果发生变化，所得<code>result</code>即为下一轮归并的结果。</p></li>
</ol>


<hr />

<p><figure class='code'><figcaption><span>Python语言实现 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="k">def</span> <span class="nf">check</span><span class="p">(</span><span class="n">lst1</span><span class="p">,</span><span class="n">lst2</span><span class="p">):</span>
</span><span class='line'>    <span class="n">flag</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">lst2</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">lst2</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">lst2</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]:</span>
</span><span class='line'>            <span class="n">flag</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">lst1</span><span class="p">[</span><span class="n">flag</span><span class="p">:]</span> <span class="o">==</span> <span class="n">lst2</span><span class="p">[</span><span class="n">flag</span><span class="p">:]:</span> <span class="c"># 插入排序</span>
</span><span class='line'>        <span class="n">result</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">lst1</span><span class="p">[:</span><span class="n">flag</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span><span class="n">lst2</span><span class="p">[</span><span class="n">flag</span><span class="o">+</span><span class="mi">1</span><span class="p">:]</span> <span class="c"># 再迭代一轮的结果</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">True</span><span class="p">,</span><span class="n">result</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span> <span class="c"># 归并排序</span>
</span><span class='line'>        <span class="n">cnt</span> <span class="o">=</span> <span class="mi">2</span> <span class="c"># 归并的数量</span>
</span><span class='line'>        <span class="n">result</span> <span class="o">=</span> <span class="n">lst2</span>
</span><span class='line'>        <span class="k">while</span> <span class="n">result</span> <span class="o">==</span> <span class="n">lst2</span><span class="p">:</span> <span class="c"># 不断归并排序直到顺序发送变化</span>
</span><span class='line'>            <span class="n">sub_lst</span> <span class="o">=</span> <span class="p">[</span><span class="nb">sorted</span><span class="p">(</span><span class="n">lst2</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">i</span><span class="o">+</span><span class="n">cnt</span><span class="p">])</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">lst2</span><span class="p">),</span><span class="n">cnt</span><span class="p">)]</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="n">num</span> <span class="k">for</span> <span class="n">sub</span> <span class="ow">in</span> <span class="n">sub_lst</span> <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">sub</span><span class="p">]</span>
</span><span class='line'>            <span class="n">cnt</span> <span class="o">*=</span> <span class="mi">2</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">False</span><span class="p">,</span><span class="n">result</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">num</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
</span><span class='line'><span class="n">lst1</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()]</span>
</span><span class='line'><span class="n">lst2</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()]</span>
</span><span class='line'><span class="n">flag</span><span class="p">,</span><span class="n">next_list</span> <span class="o">=</span> <span class="n">check</span><span class="p">(</span><span class="n">lst1</span><span class="p">,</span><span class="n">lst2</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="n">flag</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Insertion</span> <span class="n">Sort</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Merge</span> <span class="n">Sort</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">next_list</span><span class="p">]))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/patb/1035.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1068. 万绿丛中一点红 (20)]]></title>
    <link href="http://czczup.github.io/blog/20180221/pat-basic-level-1068/"/>
    <updated>2018-02-21T14:58:01+08:00</updated>
    <id>http://czczup.github.io/blog/20180221/pat-basic-level-1068</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;对于计算机而言，颜色不过是像素点对应的一个24位的数值。现给定一幅分辨率为MxN的画，要求你找出万绿丛中的一点红，即有独一无二颜色的那个像素点，并且该点的颜色与其周围8个相邻像素的颜色差充分大。</p>

<!--more-->


<pre><code>输入格式：
输入第一行给出三个正整数，分别是M和N（&lt;= 1000），即图像的分辨率；以及TOL，是所求像素点与相邻点的颜色差阈值，色差超过TOL的点才被考虑。随后N行，每行给出M个像素的颜色值，范围在[0, 2^24)内。所有同行数字间用空格或TAB分开。

输出格式：
在一行中按照“(x, y): color”的格式输出所求像素点的位置以及颜色值，其中位置x和y分别是该像素在图像矩阵中的列、行编号（从1开始编号）。如果这样的点不唯一，则输出“Not Unique”；如果这样的点不存在，则输出“Not Exist”。

输入样例1：
8 6 200
0    0    0        0        0        0        0        0
65280    65280    65280    16711479 65280    65280    65280    65280
16711479 65280    65280    65280    16711680 65280    65280    65280
65280    65280    65280    65280    65280    65280    165280   165280
65280    65280    16777015 65280    65280    165280   65480    165280
16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215

输出样例1：
(5, 3): 16711680

输入样例2：
4 5 2
0 0 0 0
0 0 3 0
0 0 0 0
0 5 0 0
0 0 0 0

输出样例2：
Not Unique

输入样例3：
3 3 5
1 2 3
3 4 5
5 6 7

输出样例3：
Not Exist
</code></pre>

<hr />

<h3>思路：</h3>

<ol>
<li><p>在图像周围补一圈<code>0</code>，可避免数组越界，降低判断难度。在某些极端情况下，补<code>0</code>可能会对结果造成影响，不过在本题的测试点中不存在这种情况。</p></li>
<li><p>用<code>dic(Python)</code>或<code>map(C++)</code>记录每个数字出现的次数，查询哈希表的时间复杂度近似为<code>O(1)</code>，可以快速判断某个数字是否出现多次。</p></li>
<li><p>由C++的用时可知，<code>测试点4</code>的用时至少是其余测试点的<code>84倍</code>。因此在Python实现时，估计<code>测试点4</code>的用时在<code>1500ms</code>左右，远远大于本题的时间限制<code>500ms</code>。我估计这题用Python是没法通过了，等待大神来优化代码。</p></li>
</ol>


<hr />

<p><figure class='code'><figcaption><span>C++语言实现 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='C++'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">stdio</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">math</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">map</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">image</span><span class="p">[</span><span class="mi">1002</span><span class="p">][</span><span class="mi">1002</span><span class="p">];</span> <span class="c1">//在图片外围一圈0</span>
</span><span class='line'><span class="kt">bool</span> <span class="nf">judge</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">,</span><span class="kt">int</span> <span class="n">TOL</span><span class="p">){</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">loc_x</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="n">loc_x</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">loc_x</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">loc_y</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="n">loc_y</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">loc_y</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">loc_x</span><span class="o">==</span><span class="mi">0</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">loc_y</span><span class="o">==</span><span class="mi">0</span><span class="p">)){</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="n">abs</span><span class="p">(</span><span class="n">image</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span><span class="o">-</span><span class="n">image</span><span class="p">[</span><span class="n">x</span><span class="o">+</span><span class="n">loc_x</span><span class="p">][</span><span class="n">y</span><span class="o">+</span><span class="n">loc_y</span><span class="p">])</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="n">TOL</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span> <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'>        <span class="p">}</span>   <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">M</span><span class="p">,</span><span class="n">N</span><span class="p">,</span><span class="n">TOL</span><span class="p">;</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">%</span><span class="n">d</span> <span class="o">%</span><span class="n">d</span> <span class="o">%</span><span class="n">d</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">M</span><span class="p">,</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">N</span><span class="p">,</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">TOL</span><span class="p">);</span><span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'>    <span class="n">map</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;</span> <span class="n">time</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">y</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span><span class="n">N</span><span class="p">;</span><span class="n">y</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">x</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span><span class="n">M</span><span class="p">;</span><span class="n">x</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>            <span class="n">scanf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">%</span><span class="n">d</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">image</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]);</span>
</span><span class='line'>            <span class="n">time</span><span class="p">[</span><span class="n">image</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span> <span class="c1">//统计每个数字的出现次数</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">temp_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="n">temp_y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">y</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">y</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span><span class="n">N</span><span class="p">;</span><span class="n">y</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">x</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span><span class="n">M</span><span class="p">;</span><span class="n">x</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">judge</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">TOL</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">time</span><span class="p">[</span><span class="n">image</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
</span><span class='line'>                <span class="n">temp_x</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span> <span class="c1">//记录特殊点的坐标</span>
</span><span class='line'>                <span class="n">temp_y</span> <span class="o">=</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'>                <span class="n">cnt</span><span class="o">++</span><span class="p">;</span> <span class="c1">//统计特殊点的个数</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>   <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">cnt</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;(</span><span class="o">%</span><span class="n">d</span><span class="p">,</span> <span class="o">%</span><span class="n">d</span><span class="p">)</span><span class="o">:</span> <span class="o">%</span><span class="n">d</span><span class="err">\</span><span class="n">n</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span><span class="n">temp_x</span><span class="p">,</span><span class="n">temp_y</span><span class="p">,</span><span class="n">image</span><span class="p">[</span><span class="n">temp_x</span><span class="p">][</span><span class="n">temp_y</span><span class="p">]);</span>
</span><span class='line'>    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">cnt</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Not</span> <span class="n">Exist</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;);</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Not</span> <span class="n">Unique</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;);</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/patb/1068.png"></p>

<hr />

<p><figure class='code'><figcaption><span>Python语言实现 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="k">def</span> <span class="nf">judge</span><span class="p">(</span><span class="n">image</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">TOL</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">loc_x</span> <span class="ow">in</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]:</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">loc_y</span> <span class="ow">in</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]:</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">[</span><span class="n">loc_x</span><span class="p">,</span><span class="n">loc_y</span><span class="p">]</span> <span class="o">!=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]:</span>
</span><span class='line'>                <span class="k">if</span> <span class="nb">abs</span><span class="p">(</span><span class="n">image</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">]</span><span class="o">-</span><span class="n">image</span><span class="p">[</span><span class="n">y</span><span class="o">+</span><span class="n">loc_y</span><span class="p">][</span><span class="n">x</span><span class="o">+</span><span class="n">loc_x</span><span class="p">])</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="n">TOL</span><span class="p">:</span>
</span><span class='line'>                    <span class="k">return</span> <span class="bp">False</span>
</span><span class='line'>    <span class="k">return</span> <span class="bp">True</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">M</span><span class="p">,</span><span class="n">N</span><span class="p">,</span><span class="n">TOL</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()]</span>
</span><span class='line'><span class="n">image</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="n">image</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="mi">0</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">M</span><span class="o">+</span><span class="mi">2</span><span class="p">)])</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
</span><span class='line'>    <span class="n">image</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()]</span> <span class="o">+</span> <span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'><span class="n">image</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="mi">0</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">M</span><span class="o">+</span><span class="mi">2</span><span class="p">)])</span>
</span><span class='line'><span class="n">result</span><span class="p">,</span><span class="n">time</span> <span class="o">=</span> <span class="p">[],{}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">M</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">image</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">time</span><span class="p">:</span>
</span><span class='line'>            <span class="n">time</span><span class="p">[</span><span class="n">image</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">]]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="n">time</span><span class="p">[</span><span class="n">image</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">]]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">M</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">judge</span><span class="p">(</span><span class="n">image</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">TOL</span><span class="p">)</span> <span class="ow">and</span> <span class="n">time</span><span class="p">[</span><span class="n">image</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">]]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>            <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;(</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;):</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">image</span><span class="p">[</span><span class="n">y</span><span class="p">][</span><span class="n">x</span><span class="p">])])</span>
</span><span class='line'><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'><span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Not</span> <span class="n">Exist</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Not</span> <span class="n">Unique</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/patb/1068_2.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1074. 宇宙无敌加法器 (20)]]></title>
    <link href="http://czczup.github.io/blog/20180221/pat-basic-level-1074/"/>
    <updated>2018-02-21T12:30:42+08:00</updated>
    <id>http://czczup.github.io/blog/20180221/pat-basic-level-1074</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;地球人习惯使用十进制数，并且默认一个数字的每一位都是十进制的。而在PAT星人开挂的世界里，每个数字的每一位都是不同进制的，这种神奇的数字称为“PAT数”。每个PAT星人都必须熟记各位数字的进制表，例如“……0527”就表示最低位是7进制数、第2位是2进制数、第3位是5进制数、第4位是10进制数，等等。每一位的进制d或者是0（表示十进制）、或者是[2，9]区间内的整数。理论上这个进制表应该包含无穷多位数字，但从实际应用出发，PAT星人通常只需要记住前20位就够用了，以后各位默认为10进制。</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;在这样的数字系统中，即使是简单的加法运算也变得不简单。例如对应进制表“0527”，该如何计算“6203+415”呢？我们得首先计算最低位：3+5=8；因为最低位是7进制的，所以我们得到1和1个进位。第2位是：0+1+1（进位）=2；因为此位是2进制的，所以我们得到0和1个进位。第3位是：2+4+1（进位）=7；因为此位是5进制的，所以我们得到2和1个进位。第4位是：6+1（进位）=7；因为此位是10进制的，所以我们就得到7。最后我们得到：6203+415=7201。</p>

<pre><code>输入格式：
输入首先在第一行给出一个N位的进制表（0 &lt; N &lt;=20），以回车结束。 随后两行，每行给出一个不超过N位的正的PAT数。

输出格式：
在一行中输出两个PAT数之和。

输入样例：
30527
06203
415

输出样例：
7201
</code></pre>

<hr />

<p><figure class='code'><figcaption><span>Python语言实现 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="n">table</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span> <span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="o">==</span><span class="mi">0</span> <span class="k">else</span> <span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="nb">input</span><span class="p">())]</span>
</span><span class='line'><span class="n">num1</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">zfill</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">table</span><span class="p">)))]</span>
</span><span class='line'><span class="n">num2</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">zfill</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">table</span><span class="p">)))]</span>
</span><span class='line'><span class="n">num</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">table</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="nb">sum</span> <span class="o">=</span> <span class="n">num1</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">num2</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">temp</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">sum</span> <span class="o">&gt;=</span> <span class="n">table</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span> <span class="c"># 需要进位</span>
</span><span class='line'>        <span class="n">num</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">sum</span> <span class="o">%</span> <span class="n">table</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="n">num</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>
</span><span class='line'>    <span class="n">temp</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">//</span> <span class="n">table</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="c"># 进位</span>
</span><span class='line'><span class="n">num</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">temp</span><span class="p">)</span>
</span><span class='line'><span class="n">num</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">num</span><span class="p">])))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/patb/1074.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1071. 小赌怡情 (15)]]></title>
    <link href="http://czczup.github.io/blog/20180221/pat-basic-level-1071/"/>
    <updated>2018-02-21T11:25:56+08:00</updated>
    <id>http://czczup.github.io/blog/20180221/pat-basic-level-1071</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;常言道“小赌怡情”。这是一个很简单的小游戏：首先由计算机给出第一个整数；然后玩家下注赌第二个整数将会比第一个数大还是小；玩家下注t个筹码后，计算机给出第二个数。若玩家猜对了，则系统奖励玩家t个筹码；否则扣除玩家t个筹码。</p>

<!--more-->


<p>&#160; &#160; &#160; &#160;注意：玩家下注的筹码数不能超过自己帐户上拥有的筹码数。当玩家输光了全部筹码后，游戏就结束。</p>

<pre><code>输入格式：
输入在第一行给出2个正整数T和K（&lt;=100），分别是系统在初始状态下赠送给玩家的筹码数、以及需要处理的游戏次数。随后K行，每行对应一次游戏，顺序给出4个数字：
n1 b t n2
其中n1和n2是计算机先后给出的两个[0, 9]内的整数，保证两个数字不相等。b为0表示玩家赌“小”，为1表示玩家赌“大”。t表示玩家下注的筹码数，保证在整型范围内。

输出格式：
对每一次游戏，根据下列情况对应输出（其中t是玩家下注量，x是玩家当前持有的筹码量）：
玩家赢，输出
Win t!  Total = x.
玩家输，输出
Lose t.  Total = x.
玩家下注超过持有的筹码量，输出
Not enough tokens.  Total = x.
玩家输光后，输出
Game Over.
并结束程序。

输入样例1：
100 4
8 0 100 2
3 1 50 1
5 1 200 6
7 0 200 8

输出样例1：
Win 100!  Total = 200.
Lose 50.  Total = 150.
Not enough tokens.  Total = 150.
Not enough tokens.  Total = 150.

输入样例2：
100 4
8 0 100 2
3 1 200 1
5 1 200 6
7 0 200 8

输出样例2：
Win 100!  Total = 200.
Lose 200.  Total = 0.
Game Over.
</code></pre>

<hr />

<p><figure class='code'><figcaption><span>Python语言实现 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="n">T</span><span class="p">,</span><span class="n">K</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()]</span>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">T</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">K</span><span class="p">):</span>
</span><span class='line'>    <span class="n">n1</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">t</span><span class="p">,</span><span class="n">n2</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()]</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">t</span><span class="o">&gt;</span><span class="n">x</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Not</span> <span class="n">enough</span> <span class="n">tokens</span><span class="o">.</span>  <span class="n">Total</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'>    <span class="k">elif</span> <span class="n">n2</span> <span class="o">&gt;</span> <span class="n">n1</span> <span class="ow">and</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span> <span class="c"># 赌大</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">+=</span> <span class="n">t</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Win</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="err">!</span>  <span class="n">Total</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'>    <span class="k">elif</span> <span class="n">n1</span> <span class="o">&gt;</span> <span class="n">n2</span> <span class="ow">and</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span> <span class="c"># 赌小</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">+=</span> <span class="n">t</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Win</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="err">!</span>  <span class="n">Total</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">-=</span> <span class="n">t</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Lose</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span>  <span class="n">Total</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">x</span><span class="o">==</span><span class="mi">0</span><span class="p">:</span>
</span><span class='line'>            <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Game</span> <span class="n">Over</span><span class="o">.&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'>            <span class="k">break</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/patb/1071.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[1073. 多选题常见计分法 (20)]]></title>
    <link href="http://czczup.github.io/blog/20180221/pat-basic-level-1073/"/>
    <updated>2018-02-21T10:26:11+08:00</updated>
    <id>http://czczup.github.io/blog/20180221/pat-basic-level-1073</id>
    <content type="html"><![CDATA[<p>&#160; &#160; &#160; &#160;批改多选题是比较麻烦的事情，有很多不同的计分方法。有一种最常见的计分方法是：如果考生选择了部分正确选项，并且没有选择任何错误选项，则得到50%分数；如果考生选择了任何一个错误的选项，则不能得分。本题就请你写个程序帮助老师批改多选题，并且指出哪道题的哪个选项错的人最多。</p>

<!--more-->


<pre><code>输入格式：
输入在第一行给出两个正整数N（&lt;=1000）和M（&lt;=100），分别是学生人数和多选题的个数。随后M行，每行顺次给出一道题的满分值（不超过5的正整数）、选项个数（不少于2且不超过5的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母a开始顺次排列。各项间以1个空格分隔。最后N行，每行给出一个学生的答题情况，其每题答案格式为“(选中的选项个数 选项1 ……)”，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。

输出格式：
按照输入的顺序给出每个学生的得分，每个分数占一行，输出小数点后1位。最后输出错得最多的题目选项的信息，格式为：“错误次数 题目编号（题目按照输入的顺序从1开始编号）-选项号”。如果有并列，则每行一个选项，按题目编号递增顺序输出；再并列则按选项号递增顺序输出。行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出“Too simple”。

输入样例1：
3 4 
3 4 2 a c
2 5 1 b
5 3 2 b c
1 5 4 a b d e
(2 a c) (3 b d e) (2 a c) (3 a b e)
(2 a c) (1 b) (2 a b) (4 a b d e)
(2 b d) (1 e) (1 c) (4 a b c d)

输出样例1：
3.5
6.0
2.5
2 2-e
2 3-a
2 3-b

输入样例2：
2 2 
3 4 2 a c
2 5 1 b
(2 a c) (1 b)
(2 a c) (1 b)

输出样例2：
5.0
5.0
Too simple
</code></pre>

<hr />

<h3>思路：</h3>

<ol>
<li><p>根据题目要求编写<code>question类</code>，用<code>self.number</code>存储题目编号，用<code>self.score</code>存储题目分值，用<code>self.option</code>存储选项相关数据，用<code>self.dic</code>存储各个选项的错误次数。</p></li>
<li><p>在<code>self.dic</code>中，键的数量由选项的数量生成，正确选项的错误次数初始化为<code>N</code>，错误选项的错误次数初始化为<code>0</code>。注意，这样初始化的原因是，不仅是错误选项被选算一次错误，正确选项未选也是一次错误。</p></li>
<li><p>定义<code>check(options)</code>方法，传入学生选择的答案，与正确答案进行比对。若学生选择的某一选项在正确答案中不存在，则本题错误，该<code>key</code>对应的<code>value++</code>；若选择的选项是正确答案之一，该<code>key</code>对应的<code>value--</code>。</p></li>
<li><p>全部正确<code>return self.score</code>，部分正确<code>return self.score*0.5</code>，存在错误<code>return 0</code>。</p></li>
<li><p>一行代码取得<code>lst</code>中所有<code>question.dic</code>中的<code>value</code>的最大值：<code>max_false = max([max(question.dic.items(),key=lambda x:x[1])[1] for question in lst])</code>。</p></li>
<li><p>取出错误次数最大的非0记录，储存在<code>result</code>中，对<code>result</code>按题目编号递增顺序排序；若并列则按选项号递增顺序排序。若<code>result</code>不为空，则输出<code>"错误次数 题目编号-选项号"</code>。若为空，则输出<code>"Too simple"</code>。</p></li>
</ol>


<hr />

<p><figure class='code'><figcaption><span>Python语言实现 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="n">N</span><span class="p">,</span><span class="n">M</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()]</span> <span class="c"># 学生人数、多选题的个数</span>
</span><span class='line'><span class="k">class</span> <span class="nc">question</span><span class="p">():</span>
</span><span class='line'>    <span class="k">def</span> <span class="err">&lt;</span><span class="nf">strong</span><span class="o">&gt;</span><span class="n">init</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">number</span><span class="p">,</span><span class="n">score</span><span class="p">,</span><span class="n">op_num</span><span class="p">,</span><span class="n">true_op_num</span><span class="p">,</span><span class="n">true_op</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">number</span> <span class="o">=</span> <span class="n">number</span> <span class="c"># 题目编号</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="o">=</span> <span class="n">score</span> <span class="c"># 题目分值</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">option</span> <span class="o">=</span> <span class="p">[</span><span class="n">op_num</span><span class="p">,</span><span class="n">true_op_num</span><span class="p">,</span><span class="n">true_op</span><span class="p">]</span> <span class="c"># 选项数，正确选项数，正确答案</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">dic</span> <span class="o">=</span> <span class="p">{}</span> <span class="c"># 存储各个选项的错误次数</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">op_num</span><span class="p">):</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">dic</span><span class="p">[</span><span class="nb">chr</span><span class="p">(</span><span class="mi">97</span><span class="o">+</span><span class="n">i</span><span class="p">)]</span> <span class="o">=</span> <span class="mi">0</span> <span class="c"># 根据选项数生成字典，错误答案错误次数初始化为0</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">option</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">option</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">dic</span><span class="p">[</span><span class="n">option</span><span class="p">]</span> <span class="o">=</span> <span class="n">N</span> <span class="c"># 正确答案错误次数初始化为N</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">check</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">options</span><span class="p">):</span>
</span><span class='line'>        <span class="n">flag</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">op</span> <span class="ow">in</span> <span class="n">options</span><span class="p">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">op</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">option</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
</span><span class='line'>                <span class="n">flag</span> <span class="o">=</span> <span class="bp">True</span> <span class="c"># 选择错误</span>
</span><span class='line'>                <span class="bp">self</span><span class="o">.</span><span class="n">dic</span><span class="p">[</span><span class="n">op</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span> <span class="c"># 错误选项被选择的次数</span>
</span><span class='line'>            <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                <span class="bp">self</span><span class="o">.</span><span class="n">dic</span><span class="p">[</span><span class="n">op</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span> <span class="c"># 正确选项被选择的次数</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">flag</span> <span class="o">==</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span> <span class="c"># 得0分</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">options</span> <span class="o">==</span> <span class="bp">self</span><span class="o">.</span><span class="n">option</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">score</span> <span class="c"># 得满分</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">score</span><span class="o">*</span><span class="mf">0.5</span> <span class="c"># 得一半分&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">lst</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">M</span><span class="p">):</span>
</span><span class='line'>    <span class="n">score</span><span class="p">,</span><span class="n">op_num</span><span class="p">,</span><span class="n">true_op_num</span><span class="p">,</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">true_op</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
</span><span class='line'>    <span class="n">lst</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">question</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nb">int</span><span class="p">(</span><span class="n">score</span><span class="p">),</span><span class="nb">int</span><span class="p">(</span><span class="n">op_num</span><span class="p">),</span><span class="nb">int</span><span class="p">(</span><span class="n">true_op_num</span><span class="p">),</span><span class="n">true_op</span><span class="p">))</span> <span class="c"># 生成question对象存在lst中</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
</span><span class='line'>    <span class="n">answers</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;)</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'>    <span class="n">grade</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">M</span><span class="p">):</span>
</span><span class='line'>        <span class="n">_</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">answer</span> <span class="o">=</span> <span class="n">answers</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
</span><span class='line'>        <span class="n">grade</span> <span class="o">+=</span> <span class="n">lst</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">.</span><span class="n">check</span><span class="p">(</span><span class="n">answer</span><span class="p">)</span> <span class="c"># 计算每个学生的总分</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">%.</span><span class="mi">1</span><span class="n">f</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">%</span><span class="n">grade</span><span class="p">)</span>
</span><span class='line'><span class="n">max_false</span> <span class="o">=</span> <span class="nb">max</span><span class="p">([</span><span class="nb">max</span><span class="p">(</span><span class="n">question</span><span class="o">.</span><span class="n">dic</span><span class="o">.</span><span class="n">items</span><span class="p">(),</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">])[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">question</span> <span class="ow">in</span> <span class="n">lst</span><span class="p">])</span> <span class="c"># 错误次数最大值</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">M</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">lst</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">dic</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">lst</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">dic</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">==</span> <span class="n">max_false</span> <span class="ow">and</span> <span class="n">lst</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">dic</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span> <span class="c"># 取出错误次数最大的非0记录</span>
</span><span class='line'>            <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="n">max_false</span><span class="p">,</span><span class="n">lst</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">number</span><span class="p">,</span><span class="n">key</span><span class="p">,</span><span class="n">lst</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">number</span><span class="p">])</span> <span class="c"># 错误次数 题目编号-选项号</span>
</span><span class='line'><span class="k">if</span> <span class="n">result</span> <span class="o">!=</span> <span class="p">[]:</span> <span class="c"># 若存在错误记录</span>
</span><span class='line'>    <span class="n">result</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">item</span><span class="p">:(</span><span class="n">item</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="n">item</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span> <span class="c"># 按题目编号递增顺序输出；再并列则按选项号递增顺序输出。</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">question</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">question</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nb">str</span><span class="p">(</span><span class="n">question</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">+&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">-&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">question</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span> <span class="c"># 所有题目都没有人错</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Too</span> <span class="n">simple</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="/images/patb/1073.png"></p>
]]></content>
  </entry>
  
</feed>
